@model int


<div class="container">
	<div class="row">
		<div class="col">

			<p>
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
					<path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
				</svg>
				<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-plus-circle" viewBox="0 0 16 16">
					<path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
					<path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4" />
				</svg>
				Search for Ingredient To Add
			</p>

			<div class="input-group">
				<input id="search" type="text" placeholder="Search ingredient..." />
				<span class="input-group-text">
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
						<path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001q.044.06.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1 1 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0" />
					</svg>
				</span>
			</div>
			<div id="search-results"></div>





			<form asp-action="AddIngredientToMeal" method="post">

				<div asp-validation-summary="All" class="text-danger"></div>

				<input type="text" id="ingredientName" name="ingredientName" placeholder="Search to add" class="mb-3 bg-body-secondary" readonly />

				<div class="row justify-content-between mb-3">
					<div class="column">
						<label for="quantity">Quantity</label>
						<input type="number" name="quantity" placeholder="0" />
						<label for="unit">Unit</label>
						<input type="text" name="unit" placeholder="g (grams)" />

					</div>
				</div>

				<input type="hidden" name="mealId" value="@Model" />

				<button type="submit" class="btn btn-primary mb-3">
					Add Ingredient
					<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-fork-knife" viewBox="0 0 16 16">
						<path d="M13 .5c0-.276-.226-.506-.498-.465-1.703.257-2.94 2.012-3 8.462a.5.5 0 0 0 .498.5c.56.01 1 .13 1 1.003v5.5a.5.5 0 0 0 .5.5h1a.5.5 0 0 0 .5-.5zM4.25 0a.25.25 0 0 1 .25.25v5.122a.128.128 0 0 0 .256.006l.233-5.14A.25.25 0 0 1 5.24 0h.522a.25.25 0 0 1 .25.238l.233 5.14a.128.128 0 0 0 .256-.006V.25A.25.25 0 0 1 6.75 0h.29a.5.5 0 0 1 .498.458l.423 5.07a1.69 1.69 0 0 1-1.059 1.711l-.053.022a.92.92 0 0 0-.58.884L6.47 15a.971.971 0 1 1-1.942 0l.202-6.855a.92.92 0 0 0-.58-.884l-.053-.022a1.69 1.69 0 0 1-1.059-1.712L3.462.458A.5.5 0 0 1 3.96 0z" />
					</svg>
				</button>
			</form>
			<div class="row flex-row">
				<div class="justify-content-between d-flex ">
					<form asp-action="CancelMeal" method="post">
						<a asp-action="FinaliseMeal" class="btn btn-primary">
							Save
							<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check-square" viewBox="0 0 16 16">
								<path d="M14 1a1 1 0 0 1 1 1v12a1 1 0 0 1-1 1H2a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2z" />
								<path d="M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z" />
							</svg>
							
						</a>
						<input type="hidden" name="id" value="@Model" />
						<button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete? This action cannot be undone.');">Delete?</button>
					</form>

				</div>
			</div>

		</div>
	<div class="col">
		<div class="card">
			<div class="card-header bg-primary">
				<h1>List of Ingredients</h1>
			</div>
			<div class="card-body bg-body-tertiary">
				<div id="ingredientsAdded" class="justify-content-between"></div>
			</div>

		</div>


	</div>
	</div>
</div>





@section Scripts {
	<partial name="_ValidationScriptsPartial" />

	<script>
		$('#search').on('input', function () {
			var inputVal = $(this).val();

			$.ajax({
				type: 'POST',
				url: '@Url.Action("SearchIngredient")',
				data: { search: inputVal },
				success: function (results) {
					var $resultsContainer = $('#search-results');
					$resultsContainer.empty(); // clear old results

					// Create a button for each result
					results.forEach(function (item) {
						var $button = $('<button>')
							.addClass('btn btn-secondary m-1') // Bootstrap styling (optional)
							.text(item)
							.on('click', function () {

								$('#ingredientName').val((item.replace('[','').split(','))[0]);

								//add hidden input which takes in the values of the secondary qualities
								$resultsContainer.empty();
								$('#search').val('');
							});
							

						$resultsContainer.append($button);
					});
				},
				error: function () {
					$('#search-results').text('Error updating name.');
				}
			});
		});

        $(document).ready(function () {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetMealIngredients")',
                data: { mealId: '@Model' },
                success: function (results) {
                    const resultsContainer = $('#ingredientsAdded');
                    resultsContainer.empty();

					// Table Attribs
                    const table = document.createElement("table");
                    table.style.width = "100%";
                    table.style.borderCollapse = "separate";
                    table.style.borderSpacing = "0 10px"; 
                    table.style.textAlign = "left";

					// Adding Headers
                    const thead = document.createElement("thead");
                    const headerRow = document.createElement("tr");

                    const headers = ["Ingredient", "Sub-Type", "Quantity"];
                    headers.forEach(text => {
                        const th = document.createElement("th");
                        th.textContent = text;
                        th.style.padding = "10px 15px";
                        th.style.borderBottom = "2px solid #ccc";
                        headerRow.appendChild(th);
                    });

					console.log(results);
                    thead.appendChild(headerRow);
                    table.appendChild(thead);

					const tbody = document.createElement("tbody");
					if (results !== '' ){ // if more than 1 item show them the ingredients from the meal
					
						results.forEach(item => {
							const split = item.split('$');
							const row = document.createElement("tr");

							[split[0], split[1].replace(/,/g, ""), split[2]].forEach(text => {
								const td = document.createElement("td");
								td.textContent = text;
								td.style.padding = "8px 15px";
								td.style.backgroundColor = "#f9f9f9";
								td.style.borderRadius = "8px";
								row.appendChild(td);
							});

							tbody.appendChild(row);
						});
					} else {
						// add reminder to the user to add ingredients
						const row = document.createElement("tr");
						const td1 = document.createElement("td");
						const td2 = document.createElement("td");
						td1.textContent = "No Ingredients Yet";
						td1.style.padding = "8px 15px";
						td1.style.backgroundColor = "#f9f9f9";
						td1.style.borderRadius = "8px";
						td2.textContent = "Add Some With the UI to the Left!";
						td2.style.padding = "8px 15px";
						td2.style.backgroundColor = "#f9f9f9";
						td2.style.borderRadius = "8px";

						row.appendChild(td1);
						row.appendChild(td2);
						tbody.appendChild(row);
					}


                    table.appendChild(tbody);
                    resultsContainer.append(table);
                }
            });
        });




	</script>
}
